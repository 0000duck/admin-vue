
@{
    ViewBag.Title = "SetRole";
}

<div id="main1">
    <el-tree v-bind:data="data2" show-checkbox node-key="id" v-bind:default-expanded-keys="[2, 3]" v-bind:default-checked-keys="[6]" v-bind:props="defaultProps" accordion>
    </el-tree>
</div>
<script>
    var Main1 = new Vue({
        el: "#main1",
        data: {
            data2: [{
                id: 1,
                label: '一级 1',
                children: [{
                    id: 4,
                    label: '二级 1-1',
                    children: [{
                        id: 9,
                        label: '三级 1-1-1'
                    }, {
                        id: 10,
                        label: '三级 1-1-2'
                    }]
                }]
            }, {
                id: 2,
                label: '一级 2',
                children: [{
                    id: 5,
                    label: '二级 2-1'
                }, {
                    id: 6,
                    label: '二级 2-2'
                }]
            }, {
                id: 3,
                label: '一级 3',
                children: [{
                    id: 7,
                    label: '二级 3-1'
                }, {
                    id: 8,
                    label: '二级 3-2'
                }]
            }],
            defaultProps: {
                children: 'children',
                label: 'label'
            }
        }
    });
</script>

<div id="main2">
    <el-checkbox v-bind:indeterminate="isIndeterminate" v-model="checkAll" v-on:change="handleCheckAllChange">全选</el-checkbox>
    <div style="margin: 15px 0;"></div>
    <el-checkbox-group v-model="checkedCities" v-on:change="handleCheckedCitiesChange">
        <el-checkbox v-for="city in cities" v-bind:label="city" v-bind:key="city">{{city}}</el-checkbox>
    </el-checkbox-group>
</div>
<script>
    const cityOptions = ['上海', '北京', '广州', '深圳'];
    var Main2 = new Vue({
        el: "#main2",
        data: {

            checkAll: true,
            checkedCities: ['上海', '北京'],
            cities: cityOptions,
            isIndeterminate: true

        },
        methods: {
            handleCheckAllChange(event) {
                this.checkedCities = event.target.checked ? cityOptions : [];
                this.isIndeterminate = false;
            },
            handleCheckedCitiesChange(value) {
                let checkedCount = value.length;
                this.checkAll = checkedCount === this.cities.length;
                this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;
            }
        }
    });
</script>

