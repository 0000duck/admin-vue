
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@* 列表 *@
<div id="main">
    <template>
        <el-table v-bind:data="users" ref="table" style="width: 100%" element-loading-text="拼命加载中"
                  stripe
                  v-loading="loading"
                  v-on:selection-change="handleSelectionChange"
                  v-on:sort-change="handleSortChange">
            <el-table-column prop="account" sortable="custom" label="账户" width="180">
            </el-table-column>
            <el-table-column prop="nickName" sortable="custom" label="昵称" width="180">
            </el-table-column>
            <el-table-column prop="avatar" label="头像">
            </el-table-column>
            <el-table-column prop="avatar" v-bind:formatter="formatDate" label="创建日期">
            </el-table-column>
        </el-table>
    </template>
</div>

<script>

    var base = "/TestA";

    var fetchList = params => { return axios.get(`${base}/SysUser/list`, { params: params }).then(res => JSON.parse(res.data)); };
    var addUser = params => { return axios.post(`${base}/SysUser/add`, params).then(res => JSON.parse(res.data)); };
    var editUser = params => { return axios.post(`${base}/SysUser/edit`, params).then(res => JSON.parse(res.data)); };
    var removeUser = params => { return axios.post(`${base}/SysUser/remove`, params).then(res => JSON.parse(res.data)); };

    var main = new Vue({
        el: "#main",
        data: {
            users: [],
            total: 0,
            page: 0,
            loading: true,
            multipleSelection: [],
            reserveSelection: false,
            editDialog: false,
            createDialog: false,
            filters: {
                sortWay_prop: '',
                sortWay_order: '',
                userName: '',
                startEndTime: '',
                labelVal: '1',
                age: ''
            },
            editForm: {
                id: '',
                name: '',
                time: ''
            },
            createForm: {
                name: '',
                time: '',
                address: ''
            },
            selectedOptions: [{
                value: '1',
                label: '年龄'
            }, {
                value: '2',
                label: '姓名'
            }]
        },

        methods: {
            formatDate(row) {
                return new Date(row.createTime).toLocaleDateString();
            },
            handleSortChange(sortWay) {
                this.filters.sortWay_prop = sortWay.prop,
                this.filters.sortWay_order = sortWay.order,

                this.fetchData();
            },

            handleEditSave() {
                editUser(this.editForm).then(() => {
                    this.fetchData();
                    this.editDialog = false;

                    this.$message({
                        message: '编辑成功',
                        type: 'success'
                    });
                });
            },

            handleSave() {
                addUser(this.createForm).then(() => {
                    this.fetchData();
                    this.createDialog = false;

                    this.$message({
                        message: '保存成功',
                        type: 'success'
                    });
                });
            },

            handleEdit($index, row) {
                this.editForm.id = row.id;
                this.editDialog = true;
            },

            handleDelete($index, row) {
                this.$confirm('是否删除此条信息?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    removeUser({
                        id: row.id
                    }).then(() => {
                        this.fetchData();
                        this.$message({
                            message: '删除成功',
                            type: 'success'
                        });
                    });
                });
            },

            handleSelectionChange(val) {
                this.multipleSelection = val;
            },

            handleSearch() {
                this.fetchData();
            },

            handleCurrentChange(val) {
                this.fetchData(val);
            },

            fetchData(page) {

                let sortWay_prop = this.filters.sortWay_prop;
                let sortWay_order = this.filters.sortWay_order;

                this.page = page || this.page;

                let startTime = this.filters.startEndTime ? this.filters.startEndTime[0].getTime() : '';
                let endTime = this.filters.startEndTime ? this.filters.startEndTime[1].getTime() : '';

                let options = {
                    page: this.page,
                    rowSize: 10,
                    account: null,
                    nickName: null,
                    avatar: null,
                    startTime: startTime,
                    endTime: endTime,
                    sortWay_prop: sortWay_prop,
                    sortWay_order: sortWay_order == "ascending" ? true : false
                };
                console.log('[dashboard]:查询参数');
                console.log(options);

                this.loading = true;
                fetchList(options).then((data) => {

                    // clear selection
                    this.$refs.table.clearSelection();
                    // lazy render data
                    this.users = data.body.users;
                    this.total = data.body.total;
                    this.loading = false;

                });
            }
        },

        mounted() {
            this.fetchData();
        }
    });
</script>

@* 新增 *@
@* 编辑 *@
@* 删除 *@

